[
  {
    "objectID": "posts/2024-06-19-creating-a-til/index.html",
    "href": "posts/2024-06-19-creating-a-til/index.html",
    "title": "How to create a TIL with Quarto",
    "section": "",
    "text": "Finally got around to creating a TIL. Was inspired by the prolific Simon Willison’s TIL.\nI’m using Quarto and will host this on Github Pages. Was pretty easy to get started. Just need to install Quarto and I was off and running.\n# install quarto\nbrew install --cask quarto\n\n# create a quarto project that is a blog\nquarto create project blog til\nYou can also use the Quarto VS extension to do this through the command pallete. Instructions here."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Lawrence Wu: TIL",
    "section": "",
    "text": "Notes from Benjamin Clavie’s RAG talk\n\n\n\n\n\n\nquarto\n\n\n\n\n\n\n\n\n\nJun 19, 2024\n\n\nLawrence\n\n\n\n\n\n\n\n\n\n\n\n\nHow to create a TIL with Quarto\n\n\n\n\n\n\nquarto\n\n\n\n\n\n\n\n\n\nJun 19, 2024\n\n\nLawrence\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/2024-06-20-bcavlie-rag/index.html",
    "href": "posts/2024-06-20-bcavlie-rag/index.html",
    "title": "Notes from Benjamin Clavie’s RAG talk",
    "section": "",
    "text": "Hamel Hussain finished hosting an LLM conference. All of the talks are listed here. One of the best talks was from Benjamin Clavie. I first heard about him because he’s the author of the great RAGatouille library that made ColBERT embeddings much easier to work with.\nThat talk is here:\n\nHe made a post about it here: https://parlance-labs.com/education/rag/ben.html\nThe most important slide was showing what a really strong baseline RAG implementatoin will use as of June 2024.\n\na strong embedding model like bge-small-en-v1.5 to do the bi-encoding\na Vector Database (he recommends LanceDB)\ncreating full text search (with tf-idf)\nusing a reranker like one from Cohere. Ben maintains the rerankers library.\n\n\n\n\nRAG\n\n\nI made the code runnable in this gist:\n# Modification of bclavie's great script: https://gist.github.com/bclavie/f7b041328615d52cf5c0a9caaf03fd5e\n# shared during the Hamel's LLM Conference\n\nimport lancedb\nfrom lancedb.pydantic import LanceModel, Vector\nfrom lancedb.embeddings import get_registry\nfrom lancedb.rerankers import CohereReranker\n\n# Fetch some text content in two different categories\nfrom wikipediaapi import Wikipedia\nwiki = Wikipedia('RAGBot/0.0', 'en')\ndocs = [{\"text\": x,\n         \"category\": \"person\"}\n        for x in wiki.page('Hayao_Miyazaki').text.split('\\n\\n')]\ndocs += [{\"text\": x,\n         \"category\": \"film\"}\n         for x in wiki.page('Spirited_Away').text.split('\\n\\n')]\n\n# Enter LanceDB\nimport lancedb\nfrom lancedb.pydantic import LanceModel, Vector\nfrom lancedb.embeddings import get_registry\n\n# Initialise the embedding model\nmodel_registry = get_registry().get(\"sentence-transformers\")\nmodel = model_registry.create(name=\"BAAI/bge-small-en-v1.5\")\n\n# Create a Model to store attributes for filtering\nclass Document(LanceModel):\n    text: str = model.SourceField()\n    vector: Vector(384) = model.VectorField()\n    category: str\n\ndb = lancedb.connect(\".my_db\")\ntbl = db.create_table(\"my_table\", schema=Document)\n\n# Embed the documents and store them in the database\ntbl.add(docs)\n\n# Generate the full-text (tf-idf) search index\ntbl.create_fts_index(\"text\")\n\n# Initialise a reranker -- here, Cohere's API one\n# reranker = CohereReranker()\n\nquery = \"What is Chihiro's new name given to her by the witch?\"\n\nresults = (tbl.search(query, query_type=\"hybrid\") # Hybrid means text + vector\n.where(\"category = 'film'\", prefilter=True) # Restrict to only docs in the 'film' category\n.limit(10) # Get 10 results from first-pass retrieval\n# .rerank(reranker=reranker) # For the reranker to compute the final ranking\n          )\n\ndf_results = results.to_pandas()\n\nprint(df_results)\n\n# 0  Plot\\nTen-year-old Chihiro Ogino and her paren...  [-0.027931793, 0.019138113, -0.037934814, 0.03...     film          1.000000\n# 1  Themes\\nSupernaturalism\\nThe major themes of S...  [-0.01263991, -0.012689288, -0.060540427, 0.00...     film          0.402163\n# 2  Stage \"Spirited Away\" (Chihiro role: Kanna Has...  [-0.039504554, -0.040483218, 0.06785909, -0.04...     film          0.385661\n# 3  Traditional Japanese culture\\nSpirited Away co...  [-0.0054386444, 0.051189456, 0.00049261906, -0...     film          0.288939\n# 4  Fantasy\\nThe film has been compared to Lewis C...  [0.026491504, 0.005764672, 0.008504525, 0.0339...     film          0.253489\n# 5  Stage adaptation\\nA stage adaptation of Spirit...  [-0.055777255, -0.05455917, 0.059581134, -0.00...     film          0.236336\n# 6  Spirited Away (Japanese: 千と千尋の神隠し, Hepburn: Se...  [-0.027961232, -0.02790938, -0.004754297, 0.01...     film          0.221776\n# 7  Western consumerism\\nSimilar to the Japanese c...  [-0.0036551766, 0.060560934, 0.0022575434, 0.0...     film          0.210290\n# 8  Environmentalism\\nCommentators have often refe...  [-0.0249137, -0.0074914633, -0.018593505, 0.03...     film          0.142667\n# 9  Music\\nThe film score of Spirited Away was com...  [-0.049314227, -0.015812704, 0.0023815625, -0....     film          0.026956"
  }
]